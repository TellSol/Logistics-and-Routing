package tsp_visualization;

import java.io.Serializable;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.Currency;
import java.util.Date;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;
import java.util.Locale;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Random;
import java.util.Set;
import java.util.SortedMap;
import java.util.SortedSet;
import java.util.Stack;
import java.util.Timer;
import java.util.TreeMap;
import java.util.TreeSet;
import java.util.Vector;
import java.awt.Color;
import java.awt.Font;
import com.anylogic.engine.connectivity.ResultSet;
import com.anylogic.engine.connectivity.Statement;
import com.anylogic.engine.elements.*;
import com.anylogic.engine.markup.Network;
import com.anylogic.engine.Position;
import com.anylogic.engine.markup.PedFlowStatistics;
import com.anylogic.engine.markup.DensityMap;


import static java.lang.Math.*;
import static com.anylogic.engine.UtilitiesArray.*;
import static com.anylogic.engine.UtilitiesCollection.*;
import static com.anylogic.engine.presentation.UtilitiesColor.*;
import static com.anylogic.engine.HyperArray.*;

import com.anylogic.engine.*;
import com.anylogic.engine.analysis.*;
import com.anylogic.engine.connectivity.*;
import com.anylogic.engine.database.*;
import com.anylogic.engine.gis.*;
import com.anylogic.engine.markup.*;
import com.anylogic.engine.routing.*;
import com.anylogic.engine.presentation.*;
import com.anylogic.engine.gui.*;

import com.anylogic.libraries.processmodeling.*;

import java.awt.geom.Arc2D;

public class Main extends Agent
{
  // Parameters

  // Collection Variables
  public 
ArrayList <
GISPoint > DemandNodes = new ArrayList<GISPoint>();
  @AnyLogicInternalCodegenAPI
  private static Map<String, IElementDescriptor> elementDesciptors_xjal = createElementDescriptors( Main.class );
  
  @AnyLogicInternalCodegenAPI
  @Override
  public Map<String, IElementDescriptor> getElementDesciptors() {
    return elementDesciptors_xjal;
  }



	

  /** Internal constant, shouldn't be accessed by user */
  @AnyLogicInternalCodegenAPI
  protected static final int _STATECHART_COUNT_xjal = 0;


  // Embedded Objects

  @AnyLogicInternalCodegenAPI
  private static final AgentAnimationSettings _demandNodes_animationSettings_xjal = new AgentAnimationSettings(1000L, 1000000000L);
  @AnyLogicInternalCodegenAPI
  private static final AgentAnimationSettings _supplyNode_animationSettings_xjal = new AgentAnimationSettings(1000L, 1000000000L);
  @AnyLogicInternalCodegenAPI
  private static final AgentAnimationSettings _trucks_animationSettings_xjal = new AgentAnimationSettings(1000L, 1000000000L);
  public SupplyNode supplyNode;
  public com.anylogic.libraries.processmodeling.Source<
Truck 
> TransportStart;
  public com.anylogic.libraries.processmodeling.MoveTo<
Truck 
> Route1;
  public com.anylogic.libraries.processmodeling.MoveTo<
Truck 
> Route2;
  public com.anylogic.libraries.processmodeling.MoveTo<
Truck 
> Route3;
  public com.anylogic.libraries.processmodeling.MoveTo<
Truck 
> Route7;
  public com.anylogic.libraries.processmodeling.MoveTo<
Truck 
> Route6;
  public com.anylogic.libraries.processmodeling.MoveTo<
Truck 
> Route5;
  public com.anylogic.libraries.processmodeling.MoveTo<
Truck 
> Route4;
  public com.anylogic.libraries.processmodeling.Sink<
Truck 
> TransportEnd;

  public String getNameOf( Agent ao ) {
    if ( ao == supplyNode ) return "supplyNode";
    if ( ao == TransportStart ) return "TransportStart";
    if ( ao == Route1 ) return "Route1";
    if ( ao == Route2 ) return "Route2";
    if ( ao == Route3 ) return "Route3";
    if ( ao == Route7 ) return "Route7";
    if ( ao == Route6 ) return "Route6";
    if ( ao == Route5 ) return "Route5";
    if ( ao == Route4 ) return "Route4";
    if ( ao == TransportEnd ) return "TransportEnd";
    return super.getNameOf( ao );
  }

  public AgentAnimationSettings getAnimationSettingsOf( Agent ao ) {
    if ( ao == supplyNode ) return _supplyNode_animationSettings_xjal;
    return super.getAnimationSettingsOf( ao );
  }

  public class _demandNodes_Population extends AgentArrayList<DemandNode> {
    _demandNodes_Population( Agent owner ) {
      super( owner );
    }

    @AnyLogicInternalCodegenAPI
    public DemandNode instantiateAgent( int index ) {
    	return instantiate_demandNodes_xjal( index );
    }

    @AnyLogicInternalCodegenAPI
    public void callSetupParameters( DemandNode agent, int index, TableInput tableInput ) {
      setupParameters_demandNodes_xjal( agent, index, tableInput );
    }

    @AnyLogicInternalCodegenAPI
    public void callCreate( DemandNode agent, int index, TableInput tableInput ) {
      doBeforeCreate_demandNodes_xjal( agent, index, tableInput );
      agent.create();
    }

    @AnyLogicInternalCodegenAPI
    public boolean isPresentationEnabled() {
      return true;
    }

  }
  
  @AnyLogicCustomProposalType(value = AnyLogicCustomProposalType.Label.POPULATION, customText = "DemandNode")
  public _demandNodes_Population demandNodes = new _demandNodes_Population( this );
  public class _trucks_Population extends AgentArrayList<Truck> {
    _trucks_Population( Agent owner ) {
      super( owner );
    }

    @AnyLogicInternalCodegenAPI
    public Truck instantiateAgent( int index ) {
    	return instantiate_trucks_xjal( index );
    }

    @AnyLogicInternalCodegenAPI
    public void callSetupParameters( Truck agent, int index, TableInput tableInput ) {
      setupParameters_trucks_xjal( agent, index, tableInput );
    }

    @AnyLogicInternalCodegenAPI
    public void callCreate( Truck agent, int index, TableInput tableInput ) {
      doBeforeCreate_trucks_xjal( agent, index, tableInput );
      agent.create();
    }

    @AnyLogicInternalCodegenAPI
    public boolean isPresentationEnabled() {
      return true;
    }

  }
  
  @AnyLogicCustomProposalType(value = AnyLogicCustomProposalType.Label.POPULATION, customText = "Truck")
  public _trucks_Population trucks = new _trucks_Population( this );

  public String getNameOf( AgentList<?> aolist ) {
    if( aolist == demandNodes ) return "demandNodes";
    if( aolist == trucks ) return "trucks";
    return super.getNameOf( aolist );
  }
  
  public AgentAnimationSettings getAnimationSettingsOf( AgentList<?> aolist ) {
    if( aolist == demandNodes ) return _demandNodes_animationSettings_xjal;
    if( aolist == trucks ) return _trucks_animationSettings_xjal;
    return super.getAnimationSettingsOf( aolist );
  }

  /**
   * Returns the agent element at the specified position in demandNodes
   * population.
   * @see com.anylogic.engine.AgentList#get(int)
   * @since 7.3.7
   */
  public DemandNode demandNodes(int index) {
    return demandNodes.get( index );
  }

  /**
   * This method creates and adds new embedded object in the replicated embedded object collection demandNodes<br>
   * @return newly created embedded object
   */
  public DemandNode add_demandNodes() {
    int index = demandNodes.size();
    DemandNode _result_xjal = instantiate_demandNodes_xjal( index );
    demandNodes.callSetupParameters( _result_xjal, index );
    demandNodes.callCreate( _result_xjal, index );
    _result_xjal.start();
    return _result_xjal;
  }

  /**
   * This method removes the given embedded object from the replicated embedded object collection demandNodes<br>
   * The given object is destroyed, but not immediately in common case.
   * @param object the active object - element of replicated embedded object demandNodes - which should be removed
   * @return <code>true</code> if object was removed successfully, <code>false</code> if it doesn't belong to demandNodes
   */
  public boolean remove_demandNodes( DemandNode object ) {
    if( ! demandNodes._remove( object ) ) {
      return false;
    }
    object.removeFromFlowchart();
    object.setDestroyed();
    return true;
  }
  /**
   * Returns the agent element at the specified position in trucks
   * population.
   * @see com.anylogic.engine.AgentList#get(int)
   * @since 7.3.7
   */
  public Truck trucks(int index) {
    return trucks.get( index );
  }

  /**
   * This method creates and adds new embedded object in the replicated embedded object collection trucks<br>
   * @return newly created embedded object
   */
  public Truck add_trucks() {
    int index = trucks.size();
    Truck _result_xjal = instantiate_trucks_xjal( index );
    trucks.callSetupParameters( _result_xjal, index );
    trucks.callCreate( _result_xjal, index );
    _result_xjal.start();
    return _result_xjal;
  }

  /**
   * This method removes the given embedded object from the replicated embedded object collection trucks<br>
   * The given object is destroyed, but not immediately in common case.
   * @param object the active object - element of replicated embedded object trucks - which should be removed
   * @return <code>true</code> if object was removed successfully, <code>false</code> if it doesn't belong to trucks
   */
  public boolean remove_trucks( Truck object ) {
    if( ! trucks._remove( object ) ) {
      return false;
    }
    object.removeFromFlowchart();
    object.setDestroyed();
    return true;
  }

  /**
   * Creates an embedded object instance and adds it to the end of replicated embedded object list<br>
   * <i>This method should not be called by user</i>
   */
  protected DemandNode instantiate_demandNodes_xjal( final int index ) {
    DemandNode _result_xjal = new DemandNode( getEngine(), this, demandNodes );
    
    demandNodes._add( _result_xjal );

    return _result_xjal;
  }

  /**
   * Setups parameters of an embedded object instance<br>
   * This method should not be called by user
   */
  private void setupParameters_demandNodes_xjal( final DemandNode self, final int index, TableInput _t ) {
  }

  /**
   * Setups an embedded object instance<br>
   * This method should not be called by user
   */
  @AnyLogicInternalCodegenAPI
  private void doBeforeCreate_demandNodes_xjal( DemandNode self, final int index, TableInput _t ) {
    self.setEnvironment( this );
	INode node_xjal = 
DemandNodes.get(index) 
;
	self.setLocation( node_xjal );

    // Port connections
  }
  /**
   * Creates an embedded object instance<br>
   * <i>This method should not be called by user</i>
   */
  protected SupplyNode instantiate_supplyNode_xjal() {
    SupplyNode _result_xjal = new SupplyNode( getEngine(), this, null );
    
    return _result_xjal;
  }

  /**
   * Setups parameters of an embedded object instance<br>
   * This method should not be called by user
   */
  private void setupParameters_supplyNode_xjal( final SupplyNode self, TableInput _t ) {
  }

  /**
   * Setups an embedded object instance<br>
   * This method should not be called by user
   */
  @AnyLogicInternalCodegenAPI
  private void doBeforeCreate_supplyNode_xjal( SupplyNode self, TableInput _t ) {
    self.setEnvironment( this );
	INode node_xjal = 
LeicesterSquare 
;
	self.setLocation( node_xjal );
  }
  /**
   * Creates an embedded object instance and adds it to the end of replicated embedded object list<br>
   * <i>This method should not be called by user</i>
   */
  protected Truck instantiate_trucks_xjal( final int index ) {
    Truck _result_xjal = new Truck( getEngine(), this, trucks );
    
    trucks._add( _result_xjal );

    return _result_xjal;
  }

  /**
   * Setups parameters of an embedded object instance<br>
   * This method should not be called by user
   */
  private void setupParameters_trucks_xjal( final Truck self, final int index, TableInput _t ) {
  }

  /**
   * Setups an embedded object instance<br>
   * This method should not be called by user
   */
  @AnyLogicInternalCodegenAPI
  private void doBeforeCreate_trucks_xjal( Truck self, final int index, TableInput _t ) {
    self.setEnvironment( this );
	INode node_xjal = 
LeicesterSquare 
;
	self.setLocation( node_xjal );
	IRouteProvider _v1_xjal = 
network ;
	self.setRouteProvider( _v1_xjal );

    // Port connections
  }
  /**
   * Creates an embedded object instance<br>
   * <i>This method should not be called by user</i>
   */
  protected com.anylogic.libraries.processmodeling.Source<Truck> instantiate_TransportStart_xjal() {
    com.anylogic.libraries.processmodeling.Source<Truck> _result_xjal = new com.anylogic.libraries.processmodeling.Source<Truck>( getEngine(), this, null ) {
      @Override
      public double interarrivalTime(  ) {
        return _TransportStart_interarrivalTime_xjal( this );
      }

      @AnyLogicInternalCodegenAPI
      public TimeUnits getUnitsForCodeOf_interarrivalTime() {
        return HOUR;
      }
      @Override
      public INode locationNode( Truck agent ) {
        return _TransportStart_locationNode_xjal( this, agent );
      }
      @Override
      public Agent newEntity(  ) {
        return _TransportStart_newEntity_xjal( this );
      }
	};
    
    return _result_xjal;
  }

  /**
   * Setups parameters of an embedded object instance<br>
   * This method should not be called by user
   */
  private void setupParameters_TransportStart_xjal( final com.anylogic.libraries.processmodeling.Source<Truck> self, TableInput _t ) {
    self.arrivalType = 
self.INTERARRIVAL_TIME 
;
    self.rate = self._rate_DefaultValue_xjal();
    self.firstArrivalMode = self._firstArrivalMode_DefaultValue_xjal();
    self.firstArrivalTime = self._firstArrivalTime_DefaultValue_xjal();
    self.rateSchedule = self._rateSchedule_DefaultValue_xjal();
    self.modifyRate = self._modifyRate_DefaultValue_xjal();
    self.arrivalSchedule = self._arrivalSchedule_DefaultValue_xjal();
    self.setAgentParametersFromDB = self._setAgentParametersFromDB_DefaultValue_xjal();
    self.databaseTable = self._databaseTable_DefaultValue_xjal();
    self.multipleEntitiesPerArrival = self._multipleEntitiesPerArrival_DefaultValue_xjal();
    self.limitArrivals = 
true 
;
    self.maxArrivals = 
50 
;
    self.locationType = 
self.LOCATION_NODE 
;
    self.locationXYZInNetwork = self._locationXYZInNetwork_DefaultValue_xjal();
    self.enableCustomStartTime = self._enableCustomStartTime_DefaultValue_xjal();
    self.startTime = self._startTime_DefaultValue_xjal();
    self.addToCustomPopulation = self._addToCustomPopulation_DefaultValue_xjal();
    self.pushProtocol = self._pushProtocol_DefaultValue_xjal();
    self.discardHangingEntities = self._discardHangingEntities_DefaultValue_xjal();
  }

  /**
   * Setups an embedded object instance<br>
   * This method should not be called by user
   */
  @AnyLogicInternalCodegenAPI
  private void doBeforeCreate_TransportStart_xjal( com.anylogic.libraries.processmodeling.Source<Truck> self, TableInput _t ) {
  }
  /**
   * Creates an embedded object instance<br>
   * <i>This method should not be called by user</i>
   */
  protected com.anylogic.libraries.processmodeling.MoveTo<Truck> instantiate_Route1_xjal() {
    com.anylogic.libraries.processmodeling.MoveTo<Truck> _result_xjal = new com.anylogic.libraries.processmodeling.MoveTo<Truck>( getEngine(), this, null ) {
      @Override
      public INode destinationNode( Truck agent ) {
        return _Route1_destinationNode_xjal( this, agent );
      }
      @Override
      public boolean setSpeed( Truck agent ) {
        return _Route1_setSpeed_xjal( this, agent );
      }
	};
    
    return _result_xjal;
  }

  /**
   * Setups parameters of an embedded object instance<br>
   * This method should not be called by user
   */
  private void setupParameters_Route1_xjal( final com.anylogic.libraries.processmodeling.MoveTo<Truck> self, TableInput _t ) {
    self.mode = self._mode_DefaultValue_xjal();
    self.destinationType = self._destinationType_DefaultValue_xjal();
    self.destinationInNetwork = self._destinationInNetwork_DefaultValue_xjal();
    self.useOffsets = self._useOffsets_DefaultValue_xjal();
    self.straightMovement = self._straightMovement_DefaultValue_xjal();
    self.destinationUseRotation = self._destinationUseRotation_DefaultValue_xjal();
    self.restoreSpeedOnArrival = self._restoreSpeedOnArrival_DefaultValue_xjal();
  }

  /**
   * Setups an embedded object instance<br>
   * This method should not be called by user
   */
  @AnyLogicInternalCodegenAPI
  private void doBeforeCreate_Route1_xjal( com.anylogic.libraries.processmodeling.MoveTo<Truck> self, TableInput _t ) {
  }
  /**
   * Creates an embedded object instance<br>
   * <i>This method should not be called by user</i>
   */
  protected com.anylogic.libraries.processmodeling.MoveTo<Truck> instantiate_Route2_xjal() {
    com.anylogic.libraries.processmodeling.MoveTo<Truck> _result_xjal = new com.anylogic.libraries.processmodeling.MoveTo<Truck>( getEngine(), this, null ) {
      @Override
      public INode destinationNode( Truck agent ) {
        return _Route2_destinationNode_xjal( this, agent );
      }
      @Override
      public boolean setSpeed( Truck agent ) {
        return _Route2_setSpeed_xjal( this, agent );
      }
	};
    
    return _result_xjal;
  }

  /**
   * Setups parameters of an embedded object instance<br>
   * This method should not be called by user
   */
  private void setupParameters_Route2_xjal( final com.anylogic.libraries.processmodeling.MoveTo<Truck> self, TableInput _t ) {
    self.mode = self._mode_DefaultValue_xjal();
    self.destinationType = self._destinationType_DefaultValue_xjal();
    self.destinationInNetwork = self._destinationInNetwork_DefaultValue_xjal();
    self.useOffsets = self._useOffsets_DefaultValue_xjal();
    self.straightMovement = self._straightMovement_DefaultValue_xjal();
    self.destinationUseRotation = self._destinationUseRotation_DefaultValue_xjal();
    self.restoreSpeedOnArrival = self._restoreSpeedOnArrival_DefaultValue_xjal();
  }

  /**
   * Setups an embedded object instance<br>
   * This method should not be called by user
   */
  @AnyLogicInternalCodegenAPI
  private void doBeforeCreate_Route2_xjal( com.anylogic.libraries.processmodeling.MoveTo<Truck> self, TableInput _t ) {
  }
  /**
   * Creates an embedded object instance<br>
   * <i>This method should not be called by user</i>
   */
  protected com.anylogic.libraries.processmodeling.MoveTo<Truck> instantiate_Route3_xjal() {
    com.anylogic.libraries.processmodeling.MoveTo<Truck> _result_xjal = new com.anylogic.libraries.processmodeling.MoveTo<Truck>( getEngine(), this, null ) {
      @Override
      public INode destinationNode( Truck agent ) {
        return _Route3_destinationNode_xjal( this, agent );
      }
      @Override
      public boolean setSpeed( Truck agent ) {
        return _Route3_setSpeed_xjal( this, agent );
      }
	};
    
    return _result_xjal;
  }

  /**
   * Setups parameters of an embedded object instance<br>
   * This method should not be called by user
   */
  private void setupParameters_Route3_xjal( final com.anylogic.libraries.processmodeling.MoveTo<Truck> self, TableInput _t ) {
    self.mode = self._mode_DefaultValue_xjal();
    self.destinationType = self._destinationType_DefaultValue_xjal();
    self.destinationInNetwork = self._destinationInNetwork_DefaultValue_xjal();
    self.useOffsets = self._useOffsets_DefaultValue_xjal();
    self.straightMovement = self._straightMovement_DefaultValue_xjal();
    self.destinationUseRotation = self._destinationUseRotation_DefaultValue_xjal();
    self.restoreSpeedOnArrival = self._restoreSpeedOnArrival_DefaultValue_xjal();
  }

  /**
   * Setups an embedded object instance<br>
   * This method should not be called by user
   */
  @AnyLogicInternalCodegenAPI
  private void doBeforeCreate_Route3_xjal( com.anylogic.libraries.processmodeling.MoveTo<Truck> self, TableInput _t ) {
  }
  /**
   * Creates an embedded object instance<br>
   * <i>This method should not be called by user</i>
   */
  protected com.anylogic.libraries.processmodeling.MoveTo<Truck> instantiate_Route7_xjal() {
    com.anylogic.libraries.processmodeling.MoveTo<Truck> _result_xjal = new com.anylogic.libraries.processmodeling.MoveTo<Truck>( getEngine(), this, null ) {
      @Override
      public INode destinationNode( Truck agent ) {
        return _Route7_destinationNode_xjal( this, agent );
      }
      @Override
      public boolean setSpeed( Truck agent ) {
        return _Route7_setSpeed_xjal( this, agent );
      }
	};
    
    return _result_xjal;
  }

  /**
   * Setups parameters of an embedded object instance<br>
   * This method should not be called by user
   */
  private void setupParameters_Route7_xjal( final com.anylogic.libraries.processmodeling.MoveTo<Truck> self, TableInput _t ) {
    self.mode = self._mode_DefaultValue_xjal();
    self.destinationType = self._destinationType_DefaultValue_xjal();
    self.destinationInNetwork = self._destinationInNetwork_DefaultValue_xjal();
    self.useOffsets = self._useOffsets_DefaultValue_xjal();
    self.straightMovement = self._straightMovement_DefaultValue_xjal();
    self.destinationUseRotation = self._destinationUseRotation_DefaultValue_xjal();
    self.restoreSpeedOnArrival = self._restoreSpeedOnArrival_DefaultValue_xjal();
  }

  /**
   * Setups an embedded object instance<br>
   * This method should not be called by user
   */
  @AnyLogicInternalCodegenAPI
  private void doBeforeCreate_Route7_xjal( com.anylogic.libraries.processmodeling.MoveTo<Truck> self, TableInput _t ) {
  }
  /**
   * Creates an embedded object instance<br>
   * <i>This method should not be called by user</i>
   */
  protected com.anylogic.libraries.processmodeling.MoveTo<Truck> instantiate_Route6_xjal() {
    com.anylogic.libraries.processmodeling.MoveTo<Truck> _result_xjal = new com.anylogic.libraries.processmodeling.MoveTo<Truck>( getEngine(), this, null ) {
      @Override
      public INode destinationNode( Truck agent ) {
        return _Route6_destinationNode_xjal( this, agent );
      }
      @Override
      public boolean setSpeed( Truck agent ) {
        return _Route6_setSpeed_xjal( this, agent );
      }
	};
    
    return _result_xjal;
  }

  /**
   * Setups parameters of an embedded object instance<br>
   * This method should not be called by user
   */
  private void setupParameters_Route6_xjal( final com.anylogic.libraries.processmodeling.MoveTo<Truck> self, TableInput _t ) {
    self.mode = self._mode_DefaultValue_xjal();
    self.destinationType = self._destinationType_DefaultValue_xjal();
    self.destinationInNetwork = self._destinationInNetwork_DefaultValue_xjal();
    self.useOffsets = self._useOffsets_DefaultValue_xjal();
    self.straightMovement = self._straightMovement_DefaultValue_xjal();
    self.destinationUseRotation = self._destinationUseRotation_DefaultValue_xjal();
    self.restoreSpeedOnArrival = self._restoreSpeedOnArrival_DefaultValue_xjal();
  }

  /**
   * Setups an embedded object instance<br>
   * This method should not be called by user
   */
  @AnyLogicInternalCodegenAPI
  private void doBeforeCreate_Route6_xjal( com.anylogic.libraries.processmodeling.MoveTo<Truck> self, TableInput _t ) {
  }
  /**
   * Creates an embedded object instance<br>
   * <i>This method should not be called by user</i>
   */
  protected com.anylogic.libraries.processmodeling.MoveTo<Truck> instantiate_Route5_xjal() {
    com.anylogic.libraries.processmodeling.MoveTo<Truck> _result_xjal = new com.anylogic.libraries.processmodeling.MoveTo<Truck>( getEngine(), this, null ) {
      @Override
      public INode destinationNode( Truck agent ) {
        return _Route5_destinationNode_xjal( this, agent );
      }
      @Override
      public boolean setSpeed( Truck agent ) {
        return _Route5_setSpeed_xjal( this, agent );
      }
	};
    
    return _result_xjal;
  }

  /**
   * Setups parameters of an embedded object instance<br>
   * This method should not be called by user
   */
  private void setupParameters_Route5_xjal( final com.anylogic.libraries.processmodeling.MoveTo<Truck> self, TableInput _t ) {
    self.mode = self._mode_DefaultValue_xjal();
    self.destinationType = self._destinationType_DefaultValue_xjal();
    self.destinationInNetwork = self._destinationInNetwork_DefaultValue_xjal();
    self.useOffsets = self._useOffsets_DefaultValue_xjal();
    self.straightMovement = self._straightMovement_DefaultValue_xjal();
    self.destinationUseRotation = self._destinationUseRotation_DefaultValue_xjal();
    self.restoreSpeedOnArrival = self._restoreSpeedOnArrival_DefaultValue_xjal();
  }

  /**
   * Setups an embedded object instance<br>
   * This method should not be called by user
   */
  @AnyLogicInternalCodegenAPI
  private void doBeforeCreate_Route5_xjal( com.anylogic.libraries.processmodeling.MoveTo<Truck> self, TableInput _t ) {
  }
  /**
   * Creates an embedded object instance<br>
   * <i>This method should not be called by user</i>
   */
  protected com.anylogic.libraries.processmodeling.MoveTo<Truck> instantiate_Route4_xjal() {
    com.anylogic.libraries.processmodeling.MoveTo<Truck> _result_xjal = new com.anylogic.libraries.processmodeling.MoveTo<Truck>( getEngine(), this, null ) {
      @Override
      public INode destinationNode( Truck agent ) {
        return _Route4_destinationNode_xjal( this, agent );
      }
      @Override
      public boolean setSpeed( Truck agent ) {
        return _Route4_setSpeed_xjal( this, agent );
      }
	};
    
    return _result_xjal;
  }

  /**
   * Setups parameters of an embedded object instance<br>
   * This method should not be called by user
   */
  private void setupParameters_Route4_xjal( final com.anylogic.libraries.processmodeling.MoveTo<Truck> self, TableInput _t ) {
    self.mode = self._mode_DefaultValue_xjal();
    self.destinationType = self._destinationType_DefaultValue_xjal();
    self.destinationInNetwork = self._destinationInNetwork_DefaultValue_xjal();
    self.useOffsets = self._useOffsets_DefaultValue_xjal();
    self.straightMovement = self._straightMovement_DefaultValue_xjal();
    self.destinationUseRotation = self._destinationUseRotation_DefaultValue_xjal();
    self.restoreSpeedOnArrival = self._restoreSpeedOnArrival_DefaultValue_xjal();
  }

  /**
   * Setups an embedded object instance<br>
   * This method should not be called by user
   */
  @AnyLogicInternalCodegenAPI
  private void doBeforeCreate_Route4_xjal( com.anylogic.libraries.processmodeling.MoveTo<Truck> self, TableInput _t ) {
  }
  /**
   * Creates an embedded object instance<br>
   * <i>This method should not be called by user</i>
   */
  protected com.anylogic.libraries.processmodeling.Sink<Truck> instantiate_TransportEnd_xjal() {
    com.anylogic.libraries.processmodeling.Sink<Truck> _result_xjal = new com.anylogic.libraries.processmodeling.Sink<Truck>( getEngine(), this, null );
    
    return _result_xjal;
  }

  /**
   * Setups parameters of an embedded object instance<br>
   * This method should not be called by user
   */
  private void setupParameters_TransportEnd_xjal( final com.anylogic.libraries.processmodeling.Sink<Truck> self, TableInput _t ) {
  }

  /**
   * Setups an embedded object instance<br>
   * This method should not be called by user
   */
  @AnyLogicInternalCodegenAPI
  private void doBeforeCreate_TransportEnd_xjal( com.anylogic.libraries.processmodeling.Sink<Truck> self, TableInput _t ) {
  }

  private double _TransportStart_interarrivalTime_xjal( final com.anylogic.libraries.processmodeling.Source<Truck> self ) {
    double _value;
    _value = 
5 
;
    _value = HOUR.convertTo( _value, SECOND );
    return _value;
  }
  private INode _TransportStart_locationNode_xjal( final com.anylogic.libraries.processmodeling.Source<Truck> self, Truck agent ) {
    INode _value;
    _value = 
LeicesterSquare 
;
    return _value;
  }
  private Agent _TransportStart_newEntity_xjal( final com.anylogic.libraries.processmodeling.Source<Truck> self ) {
    Agent _value;
    _value = 
new tsp_visualization.Truck() 
;
    return _value;
  }
  private INode _Route1_destinationNode_xjal( final com.anylogic.libraries.processmodeling.MoveTo<Truck> self, Truck agent ) {
    INode _value;
    _value = 
Luton 
;
    return _value;
  }
  private boolean _Route1_setSpeed_xjal( final com.anylogic.libraries.processmodeling.MoveTo<Truck> self, Truck agent ) {
    boolean _value;
    _value = 
true 
;
    return _value;
  }
  private INode _Route2_destinationNode_xjal( final com.anylogic.libraries.processmodeling.MoveTo<Truck> self, Truck agent ) {
    INode _value;
    _value = 
Chelmsford 
;
    return _value;
  }
  private boolean _Route2_setSpeed_xjal( final com.anylogic.libraries.processmodeling.MoveTo<Truck> self, Truck agent ) {
    boolean _value;
    _value = 
true 
;
    return _value;
  }
  private INode _Route3_destinationNode_xjal( final com.anylogic.libraries.processmodeling.MoveTo<Truck> self, Truck agent ) {
    INode _value;
    _value = 
CanveyIsland 
;
    return _value;
  }
  private boolean _Route3_setSpeed_xjal( final com.anylogic.libraries.processmodeling.MoveTo<Truck> self, Truck agent ) {
    boolean _value;
    _value = 
true 
;
    return _value;
  }
  private INode _Route7_destinationNode_xjal( final com.anylogic.libraries.processmodeling.MoveTo<Truck> self, Truck agent ) {
    INode _value;
    _value = 
LeicesterSquare 
;
    return _value;
  }
  private boolean _Route7_setSpeed_xjal( final com.anylogic.libraries.processmodeling.MoveTo<Truck> self, Truck agent ) {
    boolean _value;
    _value = 
true 
;
    return _value;
  }
  private INode _Route6_destinationNode_xjal( final com.anylogic.libraries.processmodeling.MoveTo<Truck> self, Truck agent ) {
    INode _value;
    _value = 
Reading 
;
    return _value;
  }
  private boolean _Route6_setSpeed_xjal( final com.anylogic.libraries.processmodeling.MoveTo<Truck> self, Truck agent ) {
    boolean _value;
    _value = 
true 
;
    return _value;
  }
  private INode _Route5_destinationNode_xjal( final com.anylogic.libraries.processmodeling.MoveTo<Truck> self, Truck agent ) {
    INode _value;
    _value = 
Guildford 
;
    return _value;
  }
  private boolean _Route5_setSpeed_xjal( final com.anylogic.libraries.processmodeling.MoveTo<Truck> self, Truck agent ) {
    boolean _value;
    _value = 
true 
;
    return _value;
  }
  private INode _Route4_destinationNode_xjal( final com.anylogic.libraries.processmodeling.MoveTo<Truck> self, Truck agent ) {
    INode _value;
    _value = 
Maidstone 
;
    return _value;
  }
  private boolean _Route4_setSpeed_xjal( final com.anylogic.libraries.processmodeling.MoveTo<Truck> self, Truck agent ) {
    boolean _value;
    _value = 
true 
;
    return _value;
  }
  // View areas
  public ViewArea InputTSP = new ViewArea( this, "InputTSP", 1050, 0, 1000, 600 );
  public ViewArea _origin_VA = new ViewArea( this, "[Origin]", 0, 0, 1000.0, 600.0 );
  @Override
  @AnyLogicInternalCodegenAPI
  public int getViewAreas(Map<String, ViewArea> _output) {
    if ( _output != null ) {
      _output.put( "InputTSP", this.InputTSP );
      _output.put( "_origin_VA", this._origin_VA );
    }
    return 2 + super.getViewAreas( _output );
  }
  @AnyLogicInternalCodegenAPI
  protected static final int _TspVisualization = 1;
  @AnyLogicInternalCodegenAPI
  protected static final int _demandNodes_presentation = 2;
  @AnyLogicInternalCodegenAPI
  protected static final int _supplyNode_presentation = 3;
  @AnyLogicInternalCodegenAPI
  protected static final int _trucks_presentation = 4;
  @AnyLogicInternalCodegenAPI
  protected static final int _Luton = 5;
  @AnyLogicInternalCodegenAPI
  protected static final int _gisRoute = 6;
  @AnyLogicInternalCodegenAPI
  protected static final int _LeicesterSquare = 7;
  @AnyLogicInternalCodegenAPI
  protected static final int _Chelmsford = 8;
  @AnyLogicInternalCodegenAPI
  protected static final int _gisRoute1 = 9;
  @AnyLogicInternalCodegenAPI
  protected static final int _CanveyIsland = 10;
  @AnyLogicInternalCodegenAPI
  protected static final int _gisRoute2 = 11;
  @AnyLogicInternalCodegenAPI
  protected static final int _Maidstone = 12;
  @AnyLogicInternalCodegenAPI
  protected static final int _gisRoute3 = 13;
  @AnyLogicInternalCodegenAPI
  protected static final int _Guildford = 14;
  @AnyLogicInternalCodegenAPI
  protected static final int _gisRoute4 = 15;
  @AnyLogicInternalCodegenAPI
  protected static final int _gisRoute5 = 16;
  @AnyLogicInternalCodegenAPI
  protected static final int _Reading = 17;
  @AnyLogicInternalCodegenAPI
  protected static final int _gisRoute6 = 18;

  /** Internal constant, shouldn't be accessed by user */
  @AnyLogicInternalCodegenAPI
  protected static final int _SHAPE_NEXT_ID_xjal = 19;

  @AnyLogicInternalCodegenAPI
  public boolean isPublicPresentationDefined() {
    return true;
  }

  @AnyLogicInternalCodegenAPI
  public boolean isEmbeddedAgentPresentationVisible( Agent _a ) {
    if (_a == supplyNode) { return true; }
    return super.isEmbeddedAgentPresentationVisible( _a );
  }
  @AnyLogicInternalCodegenAPI
  private void _initialize_network_xjal() {
	  network.addAll(Luton, gisRoute, LeicesterSquare, Chelmsford, gisRoute1, CanveyIsland, gisRoute2, Maidstone, gisRoute3, Guildford, gisRoute4, gisRoute5, Reading, gisRoute6);
  }
  @AnyLogicInternalCodegenAPI
  private void _initialize_level_xjal() {
	  level.addAll(TspVisualization);
  }

  protected ShapeGISMap TspVisualization;
  
  /**
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  protected ShapeEmbeddedObjectPresentation _demandNodes_presentation_createShapeWithStaticProperties_xjal( final Agent _a, final int _index ) {
    ShapeEmbeddedObjectPresentation shape = new ShapeEmbeddedObjectPresentation( Main.this, SHAPE_DRAW_2D3D, true, 51.53135658153485, 0.04298691217047506, 0.0, 0.0,
		false, true, _a );

    return shape;
  }

  protected ShapeAgentPopulationGroup demandNodes_presentation;
  protected ShapeEmbeddedObjectPresentation supplyNode_presentation;
  
  /**
   * <i>This method should not be called by user</i>
   */
  @AnyLogicInternalCodegenAPI
  protected ShapeEmbeddedObjectPresentation _trucks_presentation_createShapeWithStaticProperties_xjal( final Agent _a, final int _index ) {
    ShapeEmbeddedObjectPresentation shape = new ShapeEmbeddedObjectPresentation( Main.this, SHAPE_DRAW_2D3D, true, 51.53135658153485, 0.04298691217047506, 0.0, 0.0,
		false, true, _a );

    return shape;
  }

  protected ShapeAgentPopulationGroup trucks_presentation;
  protected GISPoint Luton;
  protected GISRoute gisRoute;
  protected GISPoint LeicesterSquare;
  protected GISPoint Chelmsford;
  protected GISRoute gisRoute1;
  protected GISPoint CanveyIsland;
  protected GISRoute gisRoute2;
  protected GISPoint Maidstone;
  protected GISRoute gisRoute3;
  protected GISPoint Guildford;
  protected GISRoute gisRoute4;
  protected GISRoute gisRoute5;
  protected GISPoint Reading;
  protected GISRoute gisRoute6;
  protected com.anylogic.engine.markup.GISNetwork network;

  private INetwork[] _getNetworks_xjal;

  @Override
  public INetwork[] getNetworks() {
    return _getNetworks_xjal;
  }

  protected com.anylogic.engine.markup.Level level;

  private com.anylogic.engine.markup.Level[] _getLevels_xjal;

  @Override
  public com.anylogic.engine.markup.Level[] getLevels() {
    return _getLevels_xjal;
  }

  @AnyLogicInternalCodegenAPI
  private void _createPersistentElementsBP0_xjal() {
    Luton = new GISPoint( TspVisualization, true, 51.89107295, -0.4230304076201782, 3, defaultGisFillColor, brown, 1.0, LINE_STYLE_SOLID, "Luton, East of England, England, United Kingdom" );

    LeicesterSquare = new GISPoint( TspVisualization, true, 51.5099723, -0.13006, 3, defaultGisFillColor, brown, 1.0, LINE_STYLE_SOLID, "Leicester Square, St. James's, Covent Garden, City of Westminster, London, Greater London, England, WC2H 7LH, United Kingdom" );

    Chelmsford = new GISPoint( TspVisualization, true, 51.7345436, 0.4724544, 3, defaultGisFillColor, brown, 1.0, LINE_STYLE_SOLID, "Chelmsford, Essex, East of England, England, United Kingdom" );

    CanveyIsland = new GISPoint( TspVisualization, true, 51.527661499999994, 0.5647590301987852, 3, defaultGisFillColor, brown, 1.0, LINE_STYLE_SOLID, "Canvey Island, Castle Point, Essex, East of England, England, United Kingdom" );

    Maidstone = new GISPoint( TspVisualization, true, 51.2748258, 0.5231646, 3, defaultGisFillColor, brown, 1.0, LINE_STYLE_SOLID, "Maidstone, Kent, South East, England, United Kingdom" );

    Guildford = new GISPoint( TspVisualization, true, 51.2356068, -0.5732063, 3, defaultGisFillColor, brown, 1.0, LINE_STYLE_SOLID, "Guildford, Surrey, South East, England, United Kingdom" );

    Reading = new GISPoint( TspVisualization, true, 51.45149525, -0.9836342499365378, 3, defaultGisFillColor, brown, 1.0, LINE_STYLE_SOLID, "Reading, South East, England, United Kingdom" );

    gisRoute = new GISRoute( TspVisualization, true, brown, 1.0, LINE_STYLE_DASHED, true, LeicesterSquare, Luton, this.<GISMarkupSegmentDescriptor[]>getElementProperty("gisRoute", IElementDescriptor.GIS_MARKUP_SEGMENTS) );

    gisRoute1 = new GISRoute( TspVisualization, true, brown, 1.0, LINE_STYLE_DASHED, true, Luton, Chelmsford, this.<GISMarkupSegmentDescriptor[]>getElementProperty("gisRoute1", IElementDescriptor.GIS_MARKUP_SEGMENTS) );

    gisRoute2 = new GISRoute( TspVisualization, true, brown, 1.0, LINE_STYLE_DASHED, true, Chelmsford, CanveyIsland, this.<GISMarkupSegmentDescriptor[]>getElementProperty("gisRoute2", IElementDescriptor.GIS_MARKUP_SEGMENTS) );

    gisRoute3 = new GISRoute( TspVisualization, true, brown, 1.0, LINE_STYLE_DASHED, true, CanveyIsland, Maidstone, this.<GISMarkupSegmentDescriptor[]>getElementProperty("gisRoute3", IElementDescriptor.GIS_MARKUP_SEGMENTS) );

    gisRoute4 = new GISRoute( TspVisualization, true, brown, 1.0, LINE_STYLE_DASHED, true, Maidstone, Guildford, this.<GISMarkupSegmentDescriptor[]>getElementProperty("gisRoute4", IElementDescriptor.GIS_MARKUP_SEGMENTS) );

    gisRoute5 = new GISRoute( TspVisualization, true, brown, 1.0, LINE_STYLE_DASHED, true, Guildford, Reading, this.<GISMarkupSegmentDescriptor[]>getElementProperty("gisRoute5", IElementDescriptor.GIS_MARKUP_SEGMENTS) );

    gisRoute6 = new GISRoute( TspVisualization, true, brown, 1.0, LINE_STYLE_DASHED, true, Reading, LeicesterSquare, this.<GISMarkupSegmentDescriptor[]>getElementProperty("gisRoute6", IElementDescriptor.GIS_MARKUP_SEGMENTS) );

  }

  @AnyLogicInternalCodegenAPI
  private void _createPersistentElementsAP0_xjal() {
    demandNodes_presentation = new ShapeAgentPopulationGroup(this, SHAPE_DRAW_2D3D, true, demandNodes) {
    
      @Override
      public ShapeEmbeddedObjectPresentation createShapeWithStaticProperties_xjal( final Agent _a, int index ) {
        ShapeEmbeddedObjectPresentation _e = _demandNodes_presentation_createShapeWithStaticProperties_xjal( _a, index );
        return _e;
      }
    };
    {
    supplyNode_presentation = new ShapeEmbeddedObjectPresentation( Main.this, SHAPE_DRAW_2D3D, true, 51.53135658153485, 0.04298691217047506, 0.0, 0.0,
		false, true, null );

    }
    trucks_presentation = new ShapeAgentPopulationGroup(this, SHAPE_DRAW_2D3D, true, trucks) {
    
      @Override
      public ShapeEmbeddedObjectPresentation createShapeWithStaticProperties_xjal( final Agent _a, int index ) {
        ShapeEmbeddedObjectPresentation _e = _trucks_presentation_createShapeWithStaticProperties_xjal( _a, index );
        return _e;
      }
    };
  }

  @AnyLogicInternalCodegenAPI
  private void _createPersistentElementsBS0_xjal() {
    supplyNode_presentation.setEmbeddedObject_xjal( supplyNode );
    supplyNode_presentation.setEmbeddedObject_xjal( supplyNode );
  }


  // Static initialization of persistent elements
  {
    TspVisualization = new ShapeGISMap(
		Main.this, SHAPE_DRAW_2D3D, true, 0.0, 0.0,
			1000.0, 600.0, "/tsp_visualization/", new ShapeGISMap.Layer[] { }, 51.52332867631585, -0.0769897929518443, 1.0E-6, silver, 
		white, true, 
		TileURLProviderType.ANYLOGIC, 
		new AnyLogicOnlineRouteProvider(RoutingMethod.SHORTEST, RouteProviderTransportType.CAR), 
		305, false );

	network = new com.anylogic.engine.markup.GISNetwork(TspVisualization, "network", true);
	_getNetworks_xjal = new INetwork[] { 
      network };
    level = new com.anylogic.engine.markup.Level(this, "level", SHAPE_DRAW_2D3D, 0.0, true, true);  			
	_getLevels_xjal = new com.anylogic.engine.markup.Level[] { 
      level };
    _createPersistentElementsBP0_xjal();
  }
  protected ShapeTopLevelPresentationGroup presentation;
  protected ShapeModelElementsGroup icon; 

  @Override
  @AnyLogicInternalCodegenAPI
  public ShapeTopLevelPresentationGroup getPresentationShape() {
    return presentation;
  }

  @Override
  @AnyLogicInternalCodegenAPI
  public ShapeModelElementsGroup getModelElementsShape() {
    return icon;
  }

  /**
   * Constructor
   */
  public Main( Engine engine, Agent owner, AgentList<? extends Main> ownerPopulation ) {
    super( engine, owner, ownerPopulation );
    instantiateBaseStructureThis_xjal();
  }

  @AnyLogicInternalCodegenAPI
  public void onOwnerChanged_xjal() {
    super.onOwnerChanged_xjal();
    setupReferences_xjal();
  }

  @AnyLogicInternalCodegenAPI
  public void instantiateBaseStructure_xjal() {
    super.instantiateBaseStructure_xjal();
    instantiateBaseStructureThis_xjal();
  }
  
  @AnyLogicInternalCodegenAPI
  private void instantiateBaseStructureThis_xjal() {
    supplyNode = instantiate_supplyNode_xjal();
    TransportStart = instantiate_TransportStart_xjal();
    Route1 = instantiate_Route1_xjal();
    Route2 = instantiate_Route2_xjal();
    Route3 = instantiate_Route3_xjal();
    Route7 = instantiate_Route7_xjal();
    Route6 = instantiate_Route6_xjal();
    Route5 = instantiate_Route5_xjal();
    Route4 = instantiate_Route4_xjal();
    TransportEnd = instantiate_TransportEnd_xjal();
    setupReferences_xjal();
  }
  
  @AnyLogicInternalCodegenAPI
  private void setupReferences_xjal() {
  }
  
  /**
   * Simple constructor. Please add created agent to some population by calling goToPopulation() function
   */
  public Main() {
  }
  
  /**
   * Creating embedded object instances
   */
  @AnyLogicInternalCodegenAPI
  private void instantiatePopulations_xjal() {
    {
      int _cnt = 
DemandNodes.size() 
;
      for ( int i = demandNodes.size(); i < _cnt; i++ ) {
        instantiate_demandNodes_xjal( i );
      }
    }
  }

  @Override
  @AnyLogicInternalCodegenAPI
  public void doCreate() {
    super.doCreate();
    // Creating embedded object instances
    instantiatePopulations_xjal();
    // Assigning initial values for plain variables
    setupPlainVariables_Main_xjal();
    // Dynamic initialization of persistent elements
    _createPersistentElementsAP0_xjal();
	_initialize_network_xjal();
	_initialize_level_xjal();
    level.initialize();
    network.initialize();
    presentation = new ShapeTopLevelPresentationGroup( Main.this, true, 0, 0, 0, 0 , level, demandNodes_presentation, supplyNode_presentation, trucks_presentation );
    addAll( DemandNodes, new GISPoint[] 
{Chelmsford, Maidstone, Luton, Guildford, CanveyIsland, Reading} 
    );
    // Creating embedded object instances
    instantiatePopulations_xjal();
    icon = new ShapeModelElementsGroup( Main.this, getElementProperty( "tsp_visualization.Main.icon", IElementDescriptor.MODEL_ELEMENT_DESCRIPTORS )  );
    icon.setIconOffsets( 0.0, 0.0 );
    // Environments setup
    setupSpace( TspVisualization );
    disableSteps();
    setNetworkUserDefined();
    // Creating non-replicated embedded objects
    setupParameters_supplyNode_xjal( supplyNode, null );
    doBeforeCreate_supplyNode_xjal( supplyNode, null );
    supplyNode.createAsEmbedded();
    setupParameters_TransportStart_xjal( TransportStart, null );
    doBeforeCreate_TransportStart_xjal( TransportStart, null );
    TransportStart.createAsEmbedded();
    setupParameters_Route1_xjal( Route1, null );
    doBeforeCreate_Route1_xjal( Route1, null );
    Route1.createAsEmbedded();
    setupParameters_Route2_xjal( Route2, null );
    doBeforeCreate_Route2_xjal( Route2, null );
    Route2.createAsEmbedded();
    setupParameters_Route3_xjal( Route3, null );
    doBeforeCreate_Route3_xjal( Route3, null );
    Route3.createAsEmbedded();
    setupParameters_Route7_xjal( Route7, null );
    doBeforeCreate_Route7_xjal( Route7, null );
    Route7.createAsEmbedded();
    setupParameters_Route6_xjal( Route6, null );
    doBeforeCreate_Route6_xjal( Route6, null );
    Route6.createAsEmbedded();
    setupParameters_Route5_xjal( Route5, null );
    doBeforeCreate_Route5_xjal( Route5, null );
    Route5.createAsEmbedded();
    setupParameters_Route4_xjal( Route4, null );
    doBeforeCreate_Route4_xjal( Route4, null );
    Route4.createAsEmbedded();
    setupParameters_TransportEnd_xjal( TransportEnd, null );
    doBeforeCreate_TransportEnd_xjal( TransportEnd, null );
    TransportEnd.createAsEmbedded();
	 // Port connectors with non-replicated objects
    Route1.in.connect( TransportStart.out ); // connector
    Route2.in.connect( Route1.out ); // connector1
    Route3.in.connect( Route2.out ); // connector2
    Route5.in.connect( Route4.out ); // connector4
    Route6.in.connect( Route5.out ); // connector5
    Route7.in.connect( Route6.out ); // connector6
    TransportEnd.in.connect( Route7.out ); // connector7
    Route3.out.connect( Route4.in ); // connector3
    // Creating replicated embedded objects
    demandNodes.setEnvironment( this );
    for ( int i = 0; i < demandNodes.size(); i++ ) {
      DemandNode _a = demandNodes.get(i); 
      setupParameters_demandNodes_xjal( _a, i, null );
      doBeforeCreate_demandNodes_xjal( _a, i, null );
      _a.createAsEmbedded();
    }
    trucks.setEnvironment( this );
    for ( int i = 0; i < trucks.size(); i++ ) {
      Truck _a = trucks.get(i); 
      setupParameters_trucks_xjal( _a, i, null );
      doBeforeCreate_trucks_xjal( _a, i, null );
      _a.createAsEmbedded();
    }
    setupInitialConditions_xjal( Main.class );
    // Dynamic initialization of persistent elements
    _createPersistentElementsBS0_xjal();
  }

  @Override
  @AnyLogicInternalCodegenAPI
  public void doStart() {
    super.doStart();
    for (Agent embeddedObject : demandNodes) {
      embeddedObject.startAsEmbedded();
    }
    for (Agent embeddedObject : trucks) {
      embeddedObject.startAsEmbedded();
    }
    supplyNode.startAsEmbedded();
    TransportStart.startAsEmbedded();
    Route1.startAsEmbedded();
    Route2.startAsEmbedded();
    Route3.startAsEmbedded();
    Route7.startAsEmbedded();
    Route6.startAsEmbedded();
    Route5.startAsEmbedded();
    Route4.startAsEmbedded();
    TransportEnd.startAsEmbedded();
  }
 

  /**
   * Assigning initial values for plain variables<br>
   * <em>This method isn't designed to be called by user and may be removed in future releases.</em>
   */
  @AnyLogicInternalCodegenAPI
  public void setupPlainVariables_xjal() {
    setupPlainVariables_Main_xjal();
  }

  /**
   * Assigning initial values for plain variables<br>
   * <em>This method isn't designed to be called by user and may be removed in future releases.</em>
   */
  @AnyLogicInternalCodegenAPI
  private void setupPlainVariables_Main_xjal() {
  }

  // User API -----------------------------------------------------
  @AnyLogicInternalCodegenAPI
  public static LinkToAgentAnimationSettings _connections_commonAnimationSettings_xjal = new LinkToAgentAnimationSettingsImpl( false, black, 1.0, LINE_STYLE_SOLID, ARROW_NONE, 0.0 );

  public LinkToAgentCollection<Agent, Agent> connections = new LinkToAgentStandardImpl<Agent, Agent>(this, _connections_commonAnimationSettings_xjal);
  @Override
  public LinkToAgentCollection<? extends Agent, ? extends Agent> getLinkToAgentStandard_xjal() {
    return connections;
  }


  @AnyLogicInternalCodegenAPI
  public void drawLinksToAgents(boolean _underAgents_xjal, LinkToAgentAnimator _animator_xjal) {
    super.drawLinksToAgents(_underAgents_xjal, _animator_xjal);
    if ( _underAgents_xjal ) {
      _animator_xjal.drawLink( this, connections, true, true );
    }
  }

  public List<Object> getEmbeddedObjects() {
    List<Object> list = super.getEmbeddedObjects();
    if (list == null) {
      list = new LinkedList<Object>();
    }
    list.add( demandNodes );
    list.add( supplyNode );
    list.add( trucks );
    list.add( TransportStart );
    list.add( Route1 );
    list.add( Route2 );
    list.add( Route3 );
    list.add( Route7 );
    list.add( Route6 );
    list.add( Route5 );
    list.add( Route4 );
    list.add( TransportEnd );
    return list;
  }

  public AgentList<? extends Main> getPopulation() {
    return (AgentList<? extends Main>) super.getPopulation();
  }

  public List<? extends Main> agentsInRange( double distance ) {
    return (List<? extends Main>) super.agentsInRange( distance );
  }

  @AnyLogicInternalCodegenAPI
  public void onDestroy() {
    for (Agent _item : demandNodes) {
      _item.onDestroy();
    }
    supplyNode.onDestroy();
    for (Agent _item : trucks) {
      _item.onDestroy();
    }
    TransportStart.onDestroy();
    Route1.onDestroy();
    Route2.onDestroy();
    Route3.onDestroy();
    Route7.onDestroy();
    Route6.onDestroy();
    Route5.onDestroy();
    Route4.onDestroy();
    TransportEnd.onDestroy();
    TspVisualization.destroy();
    super.onDestroy();
  }

  @AnyLogicInternalCodegenAPI
  @Override
  public void doFinish() {
    super.doFinish();
    for (Agent _item : demandNodes) {
      _item.doFinish();
    }
    supplyNode.doFinish();
    for (Agent _item : trucks) {
      _item.doFinish();
    }
    TransportStart.doFinish();
    Route1.doFinish();
    Route2.doFinish();
    Route3.doFinish();
    Route7.doFinish();
    Route6.doFinish();
    Route5.doFinish();
    Route4.doFinish();
    TransportEnd.doFinish();
  }



}